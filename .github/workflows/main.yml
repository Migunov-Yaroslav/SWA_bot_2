name: SWA_bot_2 workflow

on: [push]

jobs:
  tests:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.7

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flake8 pep8-naming flake8-broken-line flake8-return flake8-isort
          pip install -r SWA_bot/requirements.txt

      - name: Test with flake8 and django tests
        run: |
          python -m flake8

  build_and_push_to_docker_hub:
    name: Push Docker image to Docker Hub
    if: ${{ github.ref == 'refs/heads/main' }}
    runs-on: ubuntu-latest
    needs: tests
    steps:
      - name: Check out the repo
        uses: actions/checkout@v2

      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login Docker
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Push to Docker Hub
        uses: docker/build-push-action@v2
        with:
          context: ./SWA_bot/
          file: ./SWA_bot/Dockerfile
          push: true
          tags: d3rn4rr/swa_bot_2:latest

  deploy:
    runs-on: ubuntu-latest
    needs: build_and_push_to_docker_hub
    steps:
      - name: executing remote ssh commands to deploy
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USER }}
          password: ${{ secrets.PASSWORD }}
          port: ${{ secrets.PORT }}
          script: |
            sudo docker pull d3rn4rr/swa_bot_2:latest
            sudo docker compose stop
            sudo docker compose rm swa-bot
            :> .env
            echo TELEGRAM_TOKEN=${{ secrets.TELEGRAM_TOKEN }} >> .env
            echo BOT_PASSWORD=${{ secrets.BOT_PASSWORD }} >> .env
            echo SPREADSHEET_NAME=${{ secrets.SPREADSHEET_NAME }} >> .env
            
            :> client_secret.json
            echo ${{ secrets.CLIENT_SECRET }} >> client_secret.json
            
            :> sheets.googleapis.com-python.json
            echo ${{ secrets.SHEETS_GOOGLE_APIS}} >> sheets.googleapis.com-python.json
            
            sudo docker compose up -d
            sudo docker cp .env der_narr-swa-bot-1:app/
            sudo docker cp client_secret.json der_narr-swa-bot-1:app/
            sudo docker cp sheets.googleapis.com-python.json der_narr-swa-bot-1:app/
